"use strict";
const route_rule_1 = require("../router/route-rule");
const router_1 = require("../router/router");
const injector_1 = require("../injector/injector");
const chai_1 = require("chai");
const core_1 = require("../core");
describe("RouteRule", () => {
    it("Parse route and create url", () => {
        let config = {
            methods: [router_1.Methods.GET, router_1.Methods.POST],
            route: "core/index",
            url: "/home/<id:(\\d+)>"
        };
        let injector = injector_1.Injector.createAndResolve(route_rule_1.RouteRule, [{ provide: "config", useValue: config }]);
        let route = injector.get(route_rule_1.RouteRule);
        chai_1.assert.isNotNull(route);
        return Promise
            .all([
            route.parseRequest("/home/123", "GET", {}),
            route.parseRequest("/home/123", "POST", {}),
            route.parseRequest("/home/123", "CONNECT", {}),
            route.createUrl("core/index", { id: 123 })
        ])
            .then(data => {
            let result = [
                {
                    method: router_1.Methods.GET,
                    params: {
                        id: "123"
                    },
                    path: "/home/123",
                    route: "core/index"
                },
                {
                    method: router_1.Methods.POST,
                    params: {
                        id: "123"
                    },
                    path: "/home/123",
                    route: "core/index"
                },
                false,
                "/home/123"
            ];
            chai_1.assert.isTrue(core_1.isEqual(data, result));
        });
    });
});
//# sourceMappingURL=route-rule.spec.js.map