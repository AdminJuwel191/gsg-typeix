"use strict";
const router_1 = require("../router/router");
const injector_1 = require("../injector/injector");
const logger_1 = require("../logger/logger");
const chai_1 = require("chai");
const core_1 = require("../core");
describe("Router", () => {
    it("Parse request and create url", () => {
        let rootInjector = new injector_1.Injector();
        let injector = injector_1.Injector.createAndResolve(router_1.Router, [
            { provide: injector_1.Injector, useValue: rootInjector },
            { provide: logger_1.Logger, useClass: logger_1.Logger }
        ]);
        let router = injector.get(router_1.Router);
        router.addRules([
            {
                methods: [router_1.Methods.GET, router_1.Methods.POST],
                route: "controller/index",
                url: "/"
            },
            {
                methods: [router_1.Methods.GET, router_1.Methods.POST],
                route: "controller/home",
                url: "/home"
            },
            {
                methods: [router_1.Methods.GET],
                route: "controller/view",
                url: "/home/<id:(\\d+)>"
            }
        ]);
        return Promise.all([
            router.parseRequest("/", "POST", {}),
            router.parseRequest("/home", "GET", {}),
            router.parseRequest("/home/123", "GET", {}),
            router.createUrl("controller/view", { id: 123 }),
            router.createUrl("controller/index", {}),
            router.createUrl("controller/home", {}),
            router.createUrl("controller/indexs", {})
        ]).then((data) => {
            let result = [
                {
                    method: router_1.Methods.POST,
                    params: {},
                    path: "/",
                    route: "controller/index"
                },
                {
                    method: router_1.Methods.GET,
                    params: {},
                    path: "/home",
                    route: "controller/home"
                },
                {
                    method: router_1.Methods.GET,
                    params: {
                        id: "123"
                    },
                    path: "/home/123",
                    route: "controller/view"
                },
                "/home/123",
                "/",
                "/home",
                "/controller/indexs"
            ];
            chai_1.assert.isTrue(core_1.isEqual(data, result));
        });
    });
});
//# sourceMappingURL=router.spec.js.map